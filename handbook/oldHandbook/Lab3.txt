Лабораторная работа №3
сОДЕРЖАНИЕ
1. Задание

................................................................................4

2. Варианты заданий

................................................................................5

3. Дополнительное 

задание*

..................................................................................10

4. Шаги по созданию приложения .........................................................11
4.1 Шаг 1: Создание проекта

..........................................................11

4.2 Шаг 2: Добавление файлов

..........................................................14

4.2.1 Создание папки Models...............................................................14
4.2.2 Классы: Product.cs, Order.cs, OrderItem.cs ....................15
4.2.3 Добавление конвертера................................................................16
4.3 Шаг 3: Реализация интерфейса приложения.........................18
4.4 Шаг 4: Реализация логики
(MainWindow.xaml.cs)
4.4.1 Конструктор
4.4.2 Методы обновления UI

.........................................................21
................................................................23
.............................................................24

4.4.3 работа с товарами (Добавление,
............................................25
Обновление, Удаление)

Лабораторная работа №3
сОДЕРЖАНИЕ
4.4.4 работа с Заказами (Добавление,
.............................................29
Обновление, Удаление)
4.4.5 Изменение количества товаров
.............................................33
(кнопки + и -)
4.4.8 Сброс выделения в списках

.............................................35

5. Шаг 5: Внешний вид интерфейса .........................................................36
6. Шаг 6: Демонстрация работы

.........................................................37

6.1 Добавление товаров..........................................................................38
6.2 Добавление товаров в заказ ........................................................39
6.3 Создание заказа..................................................................................40
6.3 Просмотр содержимого заказа..................................................41
6.3 Удаление товаров из заказа.........................................................42
6.3 Обновление и удаление заказов................................................43

Лабораторная работа №3
Система управления заказами для онлайнмагазина

Задание
Реализовать CRUD-приложение (WPF).
Реализовать визуальное отображение списка товаров и списка
заказов
Реализовать функционал добавления, редактирования, удаления,
конкретных товаров, а также учет их количества. Реализовать
функции уменьшения количества товаров при добавлении их в заказ.
Реализовать функционал добавления, редактирования, удаления,
заказов, а также возможность редактирования количества товаров
добавленных в заказ.
В списке заказов отобразить информацию о названии, дате (времени)
заказа, общей сумме заказа и список входящих в него товаров и их
количества
Реализовать функцию расчета остатков товара (при уменьшении
количества товара в заказе, должно увеличиваться количество товара
на складе (возвращаться). При удалении товара из заказа, также
количество остатков должно увеличиваться (если было куплено 6
единиц товара и заказ удален (отменен) на складе должно стать на 6
единиц товара больше (вернуться))

3

Лабораторная работа №3
Варианты заданий
Музыкальный магазин
Товары: гитары, синтезаторы, барабаны (поля: Name, Price, Stock, Id)
Заказы: имя клиента, дата, список инструментов
Создать раздел «Инструменты», добавить поле «Тип» (например, струнные,
клавишные)
Книжный магази
Товары: книги (поля: Name — название, Price, Stock, Id)
Заказы: имя клиента, дата, список книг
Создать раздел «Книги», добавить поле «Автор» в Product
Магазин электроник
Товары: смартфоны, ноутбуки, наушники
Заказы: имя клиента, дата, список гаджетов
Создать раздел «Гаджеты», добавить поле «Бренд» (например, Apple,
Samsung)
Спортивный магази
Товары: кроссовки, тренажёры, мячи
Заказы: имя клиента, дата, список товаров
Создать раздел «Спортинвентарь», добавить поле «Категория» (обувь,
оборудование)
Магазин одежд
Товары: футболки, джинсы, куртки
Заказы: имя клиента, дата, список одежды
Создать раздел «Одежда», добавить поле «Размер» (S, M, L).

5

Лабораторная работа №3
Варианты заданий
Цветочный магази
Товары: розы, тюльпаны, орхидеи
Заказы: имя клиента, дата, список букетов
Создать раздел «Цветы», добавить поле «Тип» (букет, горшок)
Магазин игруше
Товары: конструкторы, куклы, машинки
Заказы: имя клиента, дата, список игрушек
Создать раздел «Игрушки», добавить поле «Возраст» (3+, 6+)
Магазин бытовой техник
Товары: холодильники, пылесосы, микроволновки
Заказы: имя клиента, дата, список техники
Создать раздел «Техника», добавить поле «Мощность» (Вт)
Магазин косметик
Товары: помады, кремы, духи
Заказы: имя клиента, дата, список косметики
Создать раздел «Косметика», добавить поле «Тип» (уход, макияж)
Магазин автозапчасте
Товары: фильтры, шины, аккумуляторы
Заказы: имя клиента, дата, список запчастей
Создать раздел «Запчасти», добавить поле «Марка» (Toyota, BMW)
Магазин мебел
Товары: диваны, столы, шкафы
Заказы: имя клиента, дата, список мебели
Создать раздел «Мебель», добавить поле «Материал» (дерево, металл).


6

Лабораторная работа №3
Варианты заданий
13.Магазин канцеляри
Товары: ручки, тетради, маркеры
Заказы: имя клиента, дата, список товаров
Создать раздел «Канцелярия», добавить поле «Тип» (письмо, рисование)
Магазин ювелирных издели
Товары: кольца, серьги, браслеты
Заказы: имя клиента, дата, список украшений
Создать раздел «Украшения», добавить поле «Материал» (золото, серебро)
Магазин зоотоваро
Товары: корма, игрушки, клетки
Заказы: имя клиента, дата, список товаров
Создать раздел «Зоотовары», добавить поле «Животное» (кошка, собака)
Магазин видеоиг
Товары: игры для ПК, консолей
Заказы: имя клиента, дата, список игр
Создать раздел «Игры», добавить поле «Платформа» (PC, PS5)
Магазин садовых товаро
Товары: семена, инструменты, горшки
Заказы: имя клиента, дата, список товаров
Создать раздел «Садовые товары», добавить поле «Тип» (растения, инструменты)
Магазин часо
Товары: наручные часы, настенные часы
Заказы: имя клиента, дата, список часов
Создать раздел «Часы», добавить поле «Механизм» (кварцевый, механический).

7

Лабораторная работа №3
Варианты заданий
Магазин обув
Товары: кроссовки, ботинки, туфли
Заказы: имя клиента, дата, список обуви
Создать раздел «Обувь», добавить поле «Размер» (36, 42)
Магазин настольных иг
Товары: шахматы, монополия, карточные игры
Заказы: имя клиента, дата, список игр
Создать раздел «Игры», добавить поле «Игроков» (2-4, 4-8)
Магазин сувениро
Товары: магниты, статуэтки, открытки
Заказы: имя клиента, дата, список сувениров
Создать раздел «Сувениры», добавить поле «Страна» (Россия, Италия)
Магазин парфюмерии
Товары: духи, туалетная вода
Заказы: имя клиента, дата, список парфюма
Изменения: переименовать «Продукты» в «Парфюм», добавить поле «Объём» (50
мл, 100 мл)
Магазин строительных материалов
Товары: краска, гвозди, доски
Заказы: имя клиента, дата, список материалов
Создать раздел «Материалы», добавить поле «Единица» (литры, кг)
Магазин для художнико
Товары: краски, кисти, холсты
Заказы: имя клиента, дата, список товаров
Создать раздел «Арт-товары», добавить поле «Тип» (масло, акварель).

8

Лабораторная работа №3
Варианты заданий
Магазин чая и коф
Товары: чай, кофе, сиропы
Заказы: имя клиента, дата, список товаров
Создать раздел «Напитки», добавить поле «Вес» (100 г, 500 г)
Магазин для рыбалк
Товары: удочки, приманки, катушки
Заказы: имя клиента, дата, список товаров
Создать раздел «Снаряжение», добавить поле «Тип» (спиннинг, фидер)
Магазин для кемпинга
Товары: палатки, спальники, горелки
Заказы: имя клиента, дата, список товаров
Создать раздел «Снаряжение», добавить поле «Вес» (кг)
Магазин медицинских товаро
Товары: тонометры, бинты, маски
Заказы: имя клиента, дата, список товаров
Создать раздел «Медтовары», добавить поле «Назначение» (диагностика, уход)
Магазин фильмов
Товары: DVD, Blu-ray диски
Заказы: имя клиента, дата, список фильмов
Создать раздел «Фильмы», добавить поле «Жанр» (драма, комедия)
Магазин горнолыжного оборудовани
Товары: сноуборд, горнолыжные костюмы, шлемы
Заказы: имя клиента, дата, список оборудования
Создать раздел «Снаряжение», добавить поле «Вид» (сноуборд, лыжи).

9

Лабораторная работа №3
Дополнительное задание
Реализовать удаление единственного товара в заказе. Если в заказе
присутствует только один товар, то при его удалении должен удаляться
и сам заказ. Количество данного товара должно возвращаться 

в остаток.
Добавить функционал снятия выделения товара (в списке выбранных
для добавления в заказ) и снятие выделения с заказа при клике по
пустому полю (внутри listBox).

10

Лабораторная работа №2
Шаг 1. Создание проекта
Для создания проекта необходимо выбрать:
"Создать проект"
"Приложение WPF (Майкрософт)" (Рисунок 1.1)

Рисунок 1.1 Создание проекта

11

Лабораторная работа №2
Шаг 1. Создание проекта
Далее задать имя проекта: StoreManager (Рисунок 1.2)

Рисунок 1.2. Задание имени проекта

12

Лабораторная работа №2
Шаг 1. Создание проекта
Выбрать платформу (пример выполнен на .net 8.0) (Рисунок 1.3)

Рисунок 1.3. Задание имени проекта
Структура проекта состоит из следующих файлов:
App.xaml — конфигурация приложения. Определяет основной класс
приложения, наследуемый от Application. В нём задаются ресурсы приложения
(например, стили, шаблоны) и стартовая точка (обычно указывается начальное
окно в свойстве StartupUri)
App.xaml.cs — логика приложения. Содержит класс App, который может
переопределять методы, такие как OnStartup, для настройки поведения при
запуске, или обрабатывать события приложения (например, Exit)
MainWindow.xaml — разметка и структура UI (интерфейса) главного окна.
MainWindow.xaml.cs — логика и обработчики событий окна.

13

Лабораторная работа №2
Шаг 2. Добавление файлов

Необходимо добавить следующие файлы и папки:
В корне проекта создать папку Models
В папке Models добавить два новых файла классов: Product.cs и Order.cs.
Код для файла Order.cs приведен на рисунке 2.1.

Рисунок 2.1 Класс Order.cs
Данный файл отвечает за создание нового объекта заказа. Может содержать
уникальные поля не такие как в примере ( в соответствии с вариантом).

14

Лабораторная работа №2
Шаг 2. Добавление файлов

Также необходим класс позволяющий связать товар и его количество в заказе.

Пример, созданного класса OrderItem и объявления его свойств приведен 

на рисунке 2.2.

Рисунок 2.2 Класс OrderItem
Также необходимо создать файл Product.cs. Данный файл отвечает за создание нового
объекта товара. Пример, класса Product приведен на рисунке 2.3.

Рисунок 2.3 Класс Product.cs

15

Лабораторная работа №2
Шаг 2. Добавление файлов

Также необходимо создать папку Converters. Она будет нужна для создания
конвертера. В данной папке нужно создать класс BooleanToVisibilityConverter.

Пример разметки для данного класса приведен на рисунке 2.4.

Рисунок 2.4 Разметка для файла BooleanToVisibilityConverter.cs
Этот класс реализует интерфейс IValueConverter, который используется для
преобразования данных при привязке (Data Binding)
Метод Convert преобразует значение типа bool в Visibility (перечисление WPF для
управления видимостью элементов)
true → Visibility.Visible (элемент виден)
false → Visibility.Collapsed (элемент скрыт, не занимает место 

в макете).


16

Лабораторная работа №2
Шаг 2. Добавление файлов

Метод ConvertBack не реализован, так как обратное преобразование не требуется.

Конвертеры в WPF используются для преобразования данных между источником
(моделью) и целью (элементом UI). Например, конвертер позволяет адаптировать
значение свойства модели к формату, подходящему для отображения. В данном
случае конвертер применяется для реализации эффекта placeholder (подсказки в
текстовых полях), показывая текст, когда поле пустое (Text.IsEmpty).

Свойство Visibility в WPF имеет три значения
Visible — элемент отображается
Collapsed — элемент скрыт и не занимает места
Hidden — элемент скрыт, но занимает место в макете.

17

Лабораторная работа №2
Шаг 3. Реализация интерфейса приложения
Для того чтобы реализовать внешний вид приложения необходимо добавить
соответствующую разметку в файл MainWindow.xaml
Пример разметки для данного файла будет представлен ниже на нескольких
рисунках (Рисунок 3.1, Рисунок 3.2, Рисунок 3.3).

Рисунок 3.1 Пример разметки главного окна (Часть 1)

18

Лабораторная работа №2
Шаг 3. Реализация интерфейса приложения

Рисунок 3.2 Пример разметки главного окна (Часть 2)

19

Лабораторная работа №2
Шаг 3. Реализация интерфейса приложения

Рисунок 3.3 Пример разметки главного окна (Часть 3)

20

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Далее необходимо реализовать логику окна данного приложения.
Файл MainWindow.xaml.cs — это code-behind для главного окна приложения
(MainWindow.xaml). Он содержит логику взаимодействия пользовательского
интерфейса (UI) с данными, обрабатывает события (например, нажатия кнопок)
и управляет состоянием приложения. Приложение представляет собой систему
управления магазином, где пользователь может.
Структура кода состоит из следующих элементов
Объявления класса и полей — определение данных, используемых в приложении
Конструктора — инициализация окна и начальных данных
Методов обновления UI — синхронизация списков товаров и заказов с UI
Обработчиков событий — реакция на действия пользователя (нажатия кнопок,
выбор элементов)
Вспомогательных методов — очистка полей ввода.
На рисунке 4.1 представлен пример кода для класса MainWindow.

Рисунок 4.1 пример кода для класса Main

21

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Класс MainWindow:

Наследуется от Window, так как это главное окно WPF-приложения.

Ключевое слово partial указывает, что класс разделён между MainWindow.xaml.cs
(логика) и MainWindow.xaml (разметка, сгенерированная часть).

Поля
products: Хранит список всех товаров (экземпляры класса Product). Это основная
коллекция для управления ассортиментом магазина
orders: Хранит список заказов (экземпляры класса Order). Каждый заказ содержит
имя клиента, дату и список товаров
nextProductId: Счётчик для генерации уникальных идентификаторов товаров.

Начинается с 1 и увеличивается при добавлении нового товара
nextOrderId: Аналогичный счётчик для заказов
selectedProductsForOrder: Временное хранилище товаров (OrderItem), которые
пользователь выбрал при формировании нового заказа.

Эти поля представляют состояние приложения. Они хранят данные в памяти 

(вместо базы данных) и используются для отображения в UI и обработки
пользовательских действий.

Использование List<T> означает, что данные не обновляют UI автоматически 

(в отличие от ObservableCollection<T>), поэтому код вручную обновляет списки.
Далее необходимо объявить основной метод MainWindow. Пример кода для данного
метода представлен на рисунке 4.2.

22

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения

Рисунок 4.2 пример кода для класса Main
InitializeComponent() - метод, сгенерированный WPF, загружает разметку из
MainWindow.xaml, инициализирует элементы управления (кнопки, списки,
текстовые поля) и устанавливает привязки. Без данного метода UI не будет
отображаться.

Вызовы методов обновления
UpdateProductList() — устанавливает ItemsSource для ListBox с товарами
(ProductsList), чтобы отобразить начальный список (пустой на старте)
UpdateOrderList() — аналогично предыдущему методу, только для списка заказов
(OrdersList)
UpdateSelectedProductsList() — обновляет список выбранных товаров для заказа
(SelectedProductsList).

Назначение
Конструктор подготавливает приложение к работе, загружая UI и синхронизируя
данные с элементами управления
Поскольку списки изначально пусты, вызовы обновления предотвращают ошибки
отображения.

23

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Методы для обновления списков товаров, заказов и выбранных товаров для заказа
представлены на рисунке 4.3.

Рисунок 4.3 Методы обновления данных
Метод UpdateProductList Сбрасывает ItemsSource в null, чтобы очистить привязку.
Устанавливает ItemsSource в products, чтобы ListBox (ProductsList) отобразил
текущий список товаров. Остальные методы работают аналогично. Null используется
для предотвращения проблемы с кэшированием данных в WPF, обеспечивая
корректное обновление интерфейса.

24

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Далее рассмотрим методы для работы с конкретными товарами. Эти методы
реагируют на действия пользователя с товарами (кнопки «Добавить», «Обновить»,
«Удалить», выбор в списке). Метод добавления нового товара представлен 

на рисунке 4.4.

Рисунок 4.4 Метод добавления нового товара
Данный метод проверяет валидность ввода
productName.Text не пустое
проверка productPrice.Text (что цена корректна (decimal), количество —
неотрицательное число)
productStock.Text преобразуется в int.

Если валидация не пройдена, показывает сообщение об ошибке. Создаёт новый
объект Product с уникальным Id (из nextProductId), именем, ценой и запасом из полей
ввода. Далее добавляет товар в список products, обновляет UI (UpdateProductList) 

и очищает поля ввода (ClearProductFields).

25

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Следующий метод позволяет обновить (редактировать) информацию о конкретном
товаре. Реализация метода обновления представлена на рисунке 4.5.

Рисунок 4.5 Метод обновления нового товара
Данный метод проверяет, выбран ли товар в списке ProductsList.
проводит валидацию ввода (аналогично AddProduct_Click)
если товар выбран и данные валидны, обновляет свойства выбранного объекта
Product (Name, Price, Stock)
обновляет UI и очищает поля
если товар не выбран, показывает предупреждение.

26

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Для того, чтобы исключить конкретный товар из общего списка, используется метод DeleteProduct (Рисунок 4.6).

Рисунок 4.6 Метод удаления товара
Данный метод выполняет следующие функции
удаляет товар из списка, если он не используется в заказах
если товар выбран и не связан с заказами, запрашивает подтверждение и удаляет его
также удаляет его из текущего заказа (если он там есть)
если товар используется в заказах — показывает предупреждение
обновляет UI и очищает поля.

27

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Далее рассмотрим методы ProductsList_SelectionChanged и AddToOrder. Когда
пользователь выбирает товар в списке ProductsList, метод ProductsList_SelectionChanged
заполняет поля ProductName, ProductPrice, ProductStock данными выбранного товара.

Используется также для редактирования информации о товаре (Рисунок 4.7)

Рисунок 4.7 Методы редактирования товара и добавления

в список выбранных товаров для заказа

28

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Метод AddToOrder добавляет выбранный товар из списка в текущий заказ. 
Если товар уже добавлен — увеличивает его количество. 
Если нет — создаёт новую позицию. 
Также уменьшает остаток товара на складе. 
Обновляет UI. 
Если товар не выбран или нет в наличии — показывает предупреждение.
Далее рассмотрим метод создания нового заказа. Пример кода для данного метода
представлен на рисунке 4.8.

Рисунок 4.8 Метод добавления товара в список выбранных товаров для заказа

29

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Данный метод выполняет следующие функции
создаёт новый заказ
проверяет, введено ли имя клиента и есть ли хотя бы один товар в заказе
если всё в порядке — формирует объект Order, копирует список товаров и
добавляет заказ в список orders
обновляет UI и очищает поля
если что-то не заполнено — показывает ошибку.
Следующий метод позволяет обновить информацию о заказе. Пример кода для
данного метода представлен на рисунке 4.9.

Рисунок 4.9 Метод обновления заказа

30

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
обновляет выбранный заказ
проверяет имя клиента и наличие товаров в заказе
если данные валидны — обновляет имя клиента, дату и товары в заказе
также проверяет, есть ли достаточный остаток на складе для всех товаров
обновляет UI и очищает поля
если что-то не так — показывает сообщение об ошибке.
Следующий метод позволяет удалить выбранный заказ. Пример кода для данного
метода представлен на рисунке 4.10.

Рисунок 4.10 Метод удаления заказа

31

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Следующий метод нужен для удаления товара из заказа. Код для данного метода
представлен на рисунке 4.11.

Рисунок 4.11 Метод удаления товара из заказа
метод RemoveProductFromOrder удаляет товар из текущего заказа
если количество больше 1 — уменьшает его
если 1 — полностью удаляет товар из списка
обновляет UI
если товар не выбран — показывает предупреждение.

32

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Далее рассмотрим методы, отвечающие за увеличение и уменьшение количества
товара в заказе (кнопки «+» и «-»). Пример листинга данных методов
представлен на рисунке 4.12.

Рисунок 4.12 Методы управления количеством товаров в заказе

33

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения
Данный метод позволяет выделить определенный заказ и изменить имя заказчика.
Реадизация метода представлена на рисунке 4.13.

Рисунок 4.13 Метод обновления нового товара
срабатывает при выборе заказа из списка
заполняет поле имени клиента
загружает список товаров из заказа в текущий список selectedProductsForOrder
обновляет UI.
Далее рассмотрим методы очищения полей ClearProductFields и ClearOrderFields.
Они позволяют очистить текстовые поля для добавления/редактирования товара 

и снимают выделение в списке товаров. ClearOrderFields очищает поле имени
клиента и список выбранных товаров, снимает выделение в списке заказов, при
этом не трогает список товаров (оставляет выделение). Листинг данных методов
приведен на рисунке 4.14.

34

Лабораторная работа №2
Шаг 4. Реализация логики работы окна приложения

Рисунок 4.14 Методы очистки полей и сброса выделения товара
Метод ProductsList_MouseLeftButtonDown используется, если пользователь кликнул
мышью по пустому месту в списке товаров. В этом случае метод сбрасывает
выделение. Применяется для удобства работы — чтобы можно было "отменить"
выбор.

35

Лабораторная работа №2
Шаг 5. Внешний вид приложения
В итоговом варианте внешний вид приложенияпредствален на Рисунке 5.1.

Рисунок 5.1 Интерфейс приложения

36

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
В качестве примера отображения информации в приложении, введены данные о
товарах и заказе. Пример интерфейса приложения с введенными данными приведен
на Рисунке 6.1.

Рисунок 6.1 Пример заполнения информации в приложении

37

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
Далее по нажатию кнопки “Добавить товар”, товар добавляется в общий список.
Таким образом можем добавить группу товаров (Рисунок 6.2).

Рисунок 6.2 Пример добавления группы товаров

38

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
Далее необходимо выбрать конкретный товар из списка, по нажатию кнопки
добавить его в список выбранных товаров. В данном списке помощью кнопок «­+» 

и «­-» можно отредактировать количество товаров для добавления в заказ

(Рисунок 6.3).

Рисунок 6.3
6.2 Пример добавления группы товаров

39

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
Далее необходимо ввести имя клиента (название заказа) и нажать кнопку «Создать
заказ» для добавления нового заказа в список заказов (Рисунок 6.4).

Рисунок 6.4 Пример добавления группы товаров

40

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
При нажатии на конкретный заказ можно вывести список товаров (Рисунок 6.5).

Рисунок 6.5 Вывод списка товаров в заказе

41

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
При нажатии кнопки «Удалить товар из заказа» можно удалить конкретный
товар добавленный в заказ (Рисунок 6.6).

Рисунок 6.6 Удаление товара из заказа

42

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
Кнопка «Обновить заказ» позволяет обновить информацию о заказе удалить
конкретный товар добавленный в заказ (Рисунок 6.7).

Рисунок 6.7 Обновление списка товаров в заказе

43

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
При нажатии кнопки «Удалить заказ» можно удалить конкретный заказ из
списка (Рисунок 6.8). При удалении на экран выводится сообщение с
подтверждением. После удаления количество остатков товара увеличивается
в соответствии с тем, сколько товара было в заказе.

Рисунок 6.8 Удаление товара из заказа

44

Лабораторная работа №2
Шаг 6. Демонстрация работы программы
При нажатии кнопки «Удалить товар из заказа» можно удалить конкретный
товар добавленный в заказ (Рисунок 6.9).

Рисунок 6.9 Вывод списка товаров в заказе

45


